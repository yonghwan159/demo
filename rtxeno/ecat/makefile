## This is a project made within Seoul National University of Science and Technology
## Embedded Systems Laboratory 2015 - Raimarius Tolentino Delgado


## Makefile (Xenomai)
#######################################################################################################


RT_DOMAIN ?= rt_preempt

ifeq ($(RT_DOMAIN),xenomai)
ETHERCAT_PATH=/opt/etherlab_xenomai
XENOMAI_PATH=/usr/xenomai
INC_XENO = $(shell $(XENOMAI_PATH)/bin/xeno-config --skin alchemy --cflags) 
LIB_XENO = $(shell $(XENOMAI_PATH)/bin/xeno-config --skin native --ldflags) 
ECAT_LIBS  = $(ETHERCAT_PATH)/lib -lethercat_rtdm
else
ETHERCAT_PATH=/opt/etherlab_rt63
ECAT_LIBS  = $(ETHERCAT_PATH)/lib -lethercat
endif

CFLAGS_OPTIONS = -Wall -Wno-unused-but-set-variable -Wno-unused-variable 
INC_ECAT = $(ETHERCAT_PATH)/include 

INC_EMBD =./libs/embedded/ 
INC_RT = ./libs/rt_tasks
INC_SERVO = ./libs/ecatservo/ 
INC_LIBS = ./libs/ 
INC_DIRS = -I$(INC_ECAT) -I$(INC_EMBD) -I$(INC_SERVO) -I$(INC_LIBS) -I$(INC_RT) $(INC_XENO) 

CFLAGS   = $(CFLAGS_OPTIONS) $(INC_DIRS)
LDFLAGS	 = -lm -lrt -lpthread $(LIB_XENO) -L$(ECAT_LIBS) 



SOURCES	+= main.c 			
SOURCES += $(INC_SERVO)embdECATM_demo.c
SOURCES	+= $(INC_RT)/src/rt_tasks.c
SOURCES	+= $(INC_RT)/src/rt_itc.c
ifneq ($(RT_DOMAIN),xenomai)
SOURCES	+= $(INC_RT)/src/rt_posix_task.c
SOURCES	+= $(INC_RT)/src/rt_posix_mutex.c
endif

CUR_DIR = ./
OBJ_DIR = obj
OUT_DIR = bin
OUT	= ecat-embedded
START	= start_demo

ifeq ($(wildcard main.cpp),)
CC = $(CROSS_COMPILE)gcc
else
CC = $(CROSS_COMPILE)g++
endif

LD = $(CROSS_COMPILE)ld
AS = $(CROSS_COMPILE)as

CHMOD	= /bin/chmod
MKDIR	= /bin/mkdir
ECHO	= echo
RM	= /bin/rm
#######################################################################################################
OBJECTS = $(addprefix $(OBJ_DIR)/, $(notdir $(patsubst %.c, %.o, $(patsubst %.cpp, %.o, $(SOURCES)))))
#######################################################################################################
vpath %.c  $(CUR_DIR) $(INC_SERVO) $(INC_EMBD) $(INC_RT) $(INC_RT)/src
vpath %.cpp $(CUR_DIR) $(INC_SERVO) $(INC_EMBD) $(INC_RT) $(INC_RT)/src
#######################################################################################################

ifeq ($(wildcard $(START).sh),)
all: 	$(OUT_DIR)/$(OUT) $(START)
	@$(ECHO) BUILD DONE.
	@$(CHMOD) +x $(START).sh
else
all: 
	@$(ECHO) BUILD ERROR: Run make clean first!
endif

$(START): 
	@$(ECHO) \
	"## This is a project made within Seoul National University of Science and Technology \n"\
	"## Embedded Systems Laboratory 2015 - Raimarius Tolentino Delgado \n\n"\
	"## Start-up for dynamically linked executable file \n\n\n\n"\
	"export LD_LIBRARY_PATH=$(XENOMAI_PATH)/lib:$(LIB_DIR) \n"\
	"./$(OUT_DIR)/$(OUT)\n" >> $(START).sh 

$(OUT_DIR)/$(OUT): $(OBJECTS)
	@$(MKDIR) -p $(OUT_DIR); pwd > /dev/null
	$(CC) -o $(OUT_DIR)/$(OUT) $(OBJECTS) $(LDFLAGS)

$(OBJ_DIR)/%.o : %.cpp
	@$(MKDIR) -p $(OBJ_DIR); pwd > /dev/null
	$(CC) -MD $(CFLAGS) -c -o $@ $<

$(OBJ_DIR)/%.o : %.c
	@$(MKDIR) -p $(OBJ_DIR); pwd > /dev/null
	$(CC) -MD $(CFLAGS) -c -o $@ $<

re:
	make clean
	make

clean:
	$(RM) -rf \
		$(OBJ_DIR)/* \
		$(OBJ_DIR)   \
      		$(OUT_DIR)/* \
      		$(OUT_DIR)   \
		$(START)*

.PHONY: all clean re
#######################################################################################################
# Include header file dependencies generated by -MD option:
-include $(OBJ_DIR_CUR)/*.d


